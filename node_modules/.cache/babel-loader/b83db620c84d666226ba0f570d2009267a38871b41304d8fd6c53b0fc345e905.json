{"ast":null,"code":"var _jsxFileName = \"D:\\\\Texnikum lessons\\\\tehnikum-quiz-44-2\\\\src\\\\pages\\\\StepFour.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Heading } from \"../components/Heading\";\nimport { ProgressBar } from \"../components/ProgressBar\";\nimport { useState } from \"react\";\nimport { AnswerItem } from \"../components/AnswerItem\";\nimport { LinkButton } from \"../components/LinkButton\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport * as yup from \"yup\";\nimport { useNavigate } from \"react-router-dom\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stepOneFormSchema = yup.object({\n  useranswer: yup.string().required(\"Введите ответ в правильном формате\")\n});\nconst StepFour = () => {\n  _s();\n  const navigate = useNavigate();\n  const [checkedAnswer, setCheckedAnswer] = useState(null);\n  const [phoneValue, setPhoneValue] = useState(\"\");\n  const [phoneError, setPhoneError] = useState(false);\n  const clickHandler = () => {\n    if (!phoneValue) {\n      setPhoneError(true);\n    } else {\n      setPhoneError(false);\n    }\n  };\n  const {\n    control,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(stepOneFormSchema),\n    defaultValues: {\n      useranswer: \"\"\n    }\n  });\n  const onStepOneSubmit = data => {\n    console.table(data);\n  };\n  const variants = [{\n    id: \"variant-1\",\n    AnswerLabel: \"Ответ №1\"\n  }, {\n    id: \"variant-2\",\n    AnswerLabel: \"Ответ №2\"\n  }, {\n    id: \"variant-3\",\n    AnswerLabel: \"Ответ №3\"\n  }, {\n    id: \"variant-4\",\n    AnswerLabel: \"Ответ №4\"\n  }, {\n    id: \"variant-5\",\n    AnswerLabel: \"Ответ №5\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"emoji-quiz\",\n        children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n          currentStep: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question\",\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            text: \"4. \\u0417\\u0430\\u043D\\u0438\\u043C\\u0430\\u0442\\u0435\\u043B\\u044C\\u043D\\u044B\\u0439 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\",\n            headingType: \"h2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"from\", {\n            onSubmit: handleSubmit(onStepOneSubmit),\n            children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"level-variants\",\n              children: variants.map(elem => {\n                var _errors$useranswer;\n                return /*#__PURE__*/_jsxDEV(AnswerItem, {\n                  id: elem.id,\n                  AnswerLabel: elem.AnswerLabel,\n                  onChange: () => setCheckedAnswer(elem.id),\n                  isChecked: elem.id === checkedAnswer,\n                  errorMessage: (_errors$useranswer = errors.useranswer) === null || _errors$useranswer === void 0 ? void 0 : _errors$useranswer.message,\n                  hasError: errors.useranswer ? true : false\n                }, elem.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 19\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(LinkButton, {\n              id: \"next-btn\",\n              buttonText: \"\\u0414\\u0430\\u043B\\u0435\\u0435\",\n              onClick: clickHandler,\n              path: \"/thanks\",\n              type: \"button\",\n              isDisabled: !checkedAnswer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(StepFour, \"ZT9xIcyCu6ICSlMf29nN2+15m0U=\", false, function () {\n  return [useNavigate, useForm];\n});\n_c = StepFour;\nexport default StepFour;\nvar _c;\n$RefreshReg$(_c, \"StepFour\");","map":{"version":3,"names":["React","Heading","ProgressBar","useState","AnswerItem","LinkButton","Controller","useForm","yup","useNavigate","yupResolver","jsxDEV","_jsxDEV","stepOneFormSchema","object","useranswer","string","required","StepFour","_s","navigate","checkedAnswer","setCheckedAnswer","phoneValue","setPhoneValue","phoneError","setPhoneError","clickHandler","control","handleSubmit","formState","errors","resolver","defaultValues","onStepOneSubmit","data","console","table","variants","id","AnswerLabel","className","children","currentStep","fileName","_jsxFileName","lineNumber","columnNumber","text","headingType","onSubmit","map","elem","_errors$useranswer","onChange","isChecked","errorMessage","message","hasError","buttonText","onClick","path","type","isDisabled","_c","$RefreshReg$"],"sources":["D:/Texnikum lessons/tehnikum-quiz-44-2/src/pages/StepFour.jsx"],"sourcesContent":["import React from \"react\";\nimport { Heading } from \"../components/Heading\";\nimport { ProgressBar } from \"../components/ProgressBar\";\nimport { useState } from \"react\";\nimport { AnswerItem } from \"../components/AnswerItem\";\nimport { LinkButton } from \"../components/LinkButton\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport * as yup from \"yup\";\nimport { useNavigate } from \"react-router-dom\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\n\nconst stepOneFormSchema = yup.object({\n  useranswer: yup.string().required(\"Введите ответ в правильном формате\"),\n});\n\nconst StepFour = () => {\n  const navigate = useNavigate();\n  const [checkedAnswer, setCheckedAnswer] = useState(null);\n\n  const [phoneValue, setPhoneValue] = useState(\"\");\n  const [phoneError, setPhoneError] = useState(false);\n\n  const clickHandler = () => {\n    if (!phoneValue) {\n      setPhoneError(true);\n    } else {\n      setPhoneError(false);\n    }\n  };\n\n  const {\n    control,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(stepOneFormSchema),\n    defaultValues: {\n      useranswer: \"\",\n    },\n  });\n\n  const onStepOneSubmit = (data) => {\n    console.table(data);\n  };\n\n  const variants = [\n    {\n      id: \"variant-1\",\n      AnswerLabel: \"Ответ №1\",\n    },\n    {\n      id: \"variant-2\",\n      AnswerLabel: \"Ответ №2\",\n    },\n    {\n      id: \"variant-3\",\n      AnswerLabel: \"Ответ №3\",\n    },\n    {\n      id: \"variant-4\",\n      AnswerLabel: \"Ответ №4\",\n    },\n    {\n      id: \"variant-5\",\n      AnswerLabel: \"Ответ №5\",\n    },\n  ];\n\n  return (\n    <div className=\"container\">\n      <div className=\"wrapper\">\n        <div className=\"emoji-quiz\">\n          <ProgressBar currentStep={4} />\n          <div className=\"question\">\n            <Heading text=\"4. Занимательный вопрос\" headingType=\"h2\" />\n            <from onSubmit={handleSubmit(onStepOneSubmit)}>\n              <ul className=\"level-variants\">\n                {variants.map((elem) => (\n                  <AnswerItem\n                    key={elem.id}\n                    id={elem.id}\n                    AnswerLabel={elem.AnswerLabel}\n                    onChange={() => setCheckedAnswer(elem.id)}\n                    isChecked={elem.id === checkedAnswer}\n                    errorMessage={errors.useranswer?.message}\n                    hasError={errors.useranswer ? true : false}\n                  />\n                ))}\n              </ul>\n              <LinkButton\n                id=\"next-btn\"\n                buttonText=\"Далее\"\n                onClick={clickHandler}\n                path=\"/thanks\"\n                type=\"button\"\n                isDisabled={!checkedAnswer}\n              />\n            </from>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default StepFour;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}