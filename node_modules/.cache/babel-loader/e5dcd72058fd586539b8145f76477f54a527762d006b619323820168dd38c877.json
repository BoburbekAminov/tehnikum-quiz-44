{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\tehnikum-quiz-44-2\\\\src\\\\pages\\\\StepOne.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Heading } from \"../components/Heading\";\nimport { Input } from \"../components/Input\";\nimport { ProgressBar } from \"../components/ProgressBar\";\nimport { LinkButton } from \"../components/LinkButton\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { AppInput } from \"../components/UI/AppInput\";\nimport { Button } from \"../components/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst regexUzbNumber = /^(?:\\+998)?(?:\\d{2})?(?:\\d{7})$/;\nconst stepOneFormSchema = yup.object({\n  useranswer: yup.string().required(\"Введите ответ в правильном формате\")\n});\nconst StepOne = () => {\n  _s();\n  const navigate = useNavigate();\n  const [answerValue, setAnswerValue] = useState(\"\");\n  const [answerError, setAnswerError] = useState(false);\n  const {\n    control,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(stepOneFormSchema),\n    defaultValues: {\n      useranswer: \"\"\n    }\n  });\n  const onStepOneSubmit = data => {\n    console.table(data);\n  };\n  const goToNextPage = () => {\n    if (answerError) {\n      navigate(\"/step-two\");\n    }\n  };\n  const validatePhone = () => {\n    if (answerValue) {\n      setAnswerError(true);\n    } else {\n      setAnswerError(false);\n    }\n  };\n  const handlePhoneInput = value => {\n    setAnswerValue(value);\n    validatePhone();\n  };\n  const clickHandler = () => {\n    validatePhone();\n    goToNextPage();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"single-input-quiz\",\n        children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n          currentStep: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question\",\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            text: \"1. \\u0417\\u0430\\u043D\\u0438\\u043C\\u0430\\u0442\\u0435\\u043B\\u044C\\u043D\\u044B\\u0439 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\",\n            headingType: \"h2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit(onStepOneSubmit),\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              hasError: answerError,\n              value: answerValue,\n              onChange: value => handlePhoneInput(value),\n              isRequired: true,\n              type: \"text\",\n              id: \"answer\",\n              inputPlaceholder: \"\\u0412\\u0430\\u0448 \\u043E\\u0442\\u0432\\u0435\\u0442\",\n              errorMessage: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043E\\u0442\\u0432\\u0435\\u0442 \\u0432 \\u043F\\u0440\\u0430\\u0432\\u0438\\u043B\\u044C\\u043D\\u043E\\u043C \\u0444\\u043E\\u0440\\u043C\\u0430\\u0442\\u0435\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(LinkButton, {\n              id: \"next-btn\",\n              buttonText: \"\\u0414\\u0430\\u043B\\u0435\\u0435\",\n              onClick: clickHandler,\n              path: \"/step-two\",\n              type: \"button\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(StepOne, \"mfSMRb0BfFj1mdurfAV+JsIyBfE=\", false, function () {\n  return [useNavigate, useForm];\n});\n_c = StepOne;\nexport default StepOne;\nvar _c;\n$RefreshReg$(_c, \"StepOne\");","map":{"version":3,"names":["React","useState","Heading","Input","ProgressBar","LinkButton","useNavigate","Controller","useForm","yup","yupResolver","AppInput","Button","jsxDEV","_jsxDEV","regexUzbNumber","stepOneFormSchema","object","useranswer","string","required","StepOne","_s","navigate","answerValue","setAnswerValue","answerError","setAnswerError","control","handleSubmit","formState","errors","resolver","defaultValues","onStepOneSubmit","data","console","table","goToNextPage","validatePhone","handlePhoneInput","value","clickHandler","className","children","currentStep","fileName","_jsxFileName","lineNumber","columnNumber","text","headingType","onSubmit","hasError","onChange","isRequired","type","id","inputPlaceholder","errorMessage","buttonText","onClick","path","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/tehnikum-quiz-44-2/src/pages/StepOne.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Heading } from \"../components/Heading\";\nimport { Input } from \"../components/Input\";\nimport { ProgressBar } from \"../components/ProgressBar\";\nimport { LinkButton } from \"../components/LinkButton\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { AppInput } from \"../components/UI/AppInput\";\nimport { Button } from \"../components/Button\";\n\nconst regexUzbNumber = /^(?:\\+998)?(?:\\d{2})?(?:\\d{7})$/;\n\nconst stepOneFormSchema = yup.object({\n  useranswer: yup.string().required(\"Введите ответ в правильном формате\"),\n});\n\nconst StepOne = () => {\n  const navigate = useNavigate();\n\n  const [answerValue, setAnswerValue] = useState(\"\");\n  const [answerError, setAnswerError] = useState(false);\n\n  const {\n    control,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(stepOneFormSchema),\n    defaultValues: {\n      useranswer: \"\",\n    },\n  });\n\n  const onStepOneSubmit = (data) => {\n    console.table(data);\n  };\n\n  const goToNextPage = () => {\n    if (answerError) {\n      navigate(\"/step-two\");\n    }\n  };\n\n  const validatePhone = () => {\n    if (answerValue) {\n      setAnswerError(true);\n    } else {\n      setAnswerError(false);\n    }\n  };\n\n  const handlePhoneInput = (value) => {\n    setAnswerValue(value);\n    validatePhone();\n  };\n\n  const clickHandler = () => {\n    validatePhone();\n\n    goToNextPage();\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"wrapper\">\n        <div className=\"single-input-quiz\">\n          <ProgressBar currentStep={1} />\n          <div className=\"question\">\n            <Heading text=\"1. Занимательный вопрос\" headingType=\"h2\" />\n            <form onSubmit={handleSubmit(onStepOneSubmit)}>\n              <Input\n                hasError={answerError}\n                value={answerValue}\n                onChange={(value) => handlePhoneInput(value)}\n                isRequired\n                type=\"text\"\n                id=\"answer\"\n                inputPlaceholder=\"Ваш ответ\"\n                errorMessage=\"Введите ответ в правильном формате\"\n              />\n              {/* <Controller\n                name=\"useranswer\"\n                control={control}\n                render={({ field }) => (\n                  <AppInput\n                    value={nameValue}\n                    onChange={(value) => handleNameInput(value)}\n                    id=\"username\"\n                    isRequired\n                    inputLabel=\"Ваше имя\"\n                    inputPlaceholder=\"Ваш ответ\"\n                    errorMessage={errors.username?.message}\n                    hasError={errors.username ? true : false}\n                    {...field}\n                  />\n                )}\n              /> */}\n              <LinkButton\n                id=\"next-btn\"\n                buttonText=\"Далее\"\n                onClick={clickHandler}\n                path=\"/step-two\"\n                type=\"button\"\n              />\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default StepOne;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}