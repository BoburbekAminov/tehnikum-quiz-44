{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\tehnikum-quiz-44-2\\\\src\\\\pages\\\\StepOne.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Heading } from \"../components/Heading\";\nimport { Input } from \"../components/Input\";\nimport { ProgressBar } from \"../components/ProgressBar\";\nimport { LinkButton } from \"../components/LinkButton\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { AppInput } from \"../components/UI/AppInput\";\nimport { Button } from \"../components/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst regexUzbNumber = /^(?:\\+998)?(?:\\d{2})?(?:\\d{7})$/;\nconst stepOFormSchema = yup.object({\n  username: yup.string().required(\"Обязательное поле!\"),\n  userphone: yup.string().matches(regexUzbNumber, \"Введите узбекский номер телефона!\").required(\"Обязательное поле!\")\n});\nconst StepOne = () => {\n  _s();\n  const navigate = useNavigate();\n  const [phoneValue, setPhoneValue] = useState(\"\");\n  const [phoneError, setPhoneError] = useState(false);\n  const {\n    control,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(stepOFormSchema),\n    defaultValues: {\n      username: \"\",\n      userphone: \"\"\n    }\n  });\n  const goToNextPage = () => {\n    if (phoneError) {\n      navigate(\"/step-two\");\n    }\n  };\n  const validatePhone = () => {\n    if (phoneValue) {\n      setPhoneError(true);\n    } else {\n      setPhoneError(false);\n    }\n  };\n  const handlePhoneInput = value => {\n    setPhoneValue(value);\n    validatePhone();\n  };\n  const clickHandler = () => {\n    validatePhone();\n    goToNextPage();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"single-input-quiz\",\n        children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n          currentStep: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question\",\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            text: \"1. \\u0417\\u0430\\u043D\\u0438\\u043C\\u0430\\u0442\\u0435\\u043B\\u044C\\u043D\\u044B\\u0439 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\",\n            headingType: \"h2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"input-wrapper\",\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              hasError: phoneError,\n              value: phoneValue,\n              onChange: value => handlePhoneInput(value),\n              isRequired: true,\n              type: \"text\",\n              id: \"answer\",\n              inputPlaceholder: \"\\u0412\\u0430\\u0448 \\u043E\\u0442\\u0432\\u0435\\u0442\",\n              errorMessage: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435  \\u0432 \\u043F\\u0440\\u0430\\u0432\\u0438\\u043B\\u044C\\u043D\\u043E\\u043C \\u0444\\u043E\\u0440\\u043C\\u0430\\u0442\\u0435\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LinkButton, {\n            id: \"next-btn\",\n            buttonText: \"\\u0414\\u0430\\u043B\\u0435\\u0435\",\n            onClick: clickHandler,\n            path: \"/step-two\",\n            type: \"button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(StepOne, \"3gGPD/KMVa0/VCzLoCqfEsE8waA=\", false, function () {\n  return [useNavigate, useForm];\n});\n_c = StepOne;\nexport default StepOne;\nvar _c;\n$RefreshReg$(_c, \"StepOne\");","map":{"version":3,"names":["React","useState","Heading","Input","ProgressBar","LinkButton","useNavigate","Controller","useForm","yup","yupResolver","AppInput","Button","jsxDEV","_jsxDEV","regexUzbNumber","stepOFormSchema","object","username","string","required","userphone","matches","StepOne","_s","navigate","phoneValue","setPhoneValue","phoneError","setPhoneError","control","handleSubmit","formState","errors","resolver","defaultValues","goToNextPage","validatePhone","handlePhoneInput","value","clickHandler","className","children","currentStep","fileName","_jsxFileName","lineNumber","columnNumber","text","headingType","hasError","onChange","isRequired","type","id","inputPlaceholder","errorMessage","buttonText","onClick","path","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/tehnikum-quiz-44-2/src/pages/StepOne.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Heading } from \"../components/Heading\";\nimport { Input } from \"../components/Input\";\nimport { ProgressBar } from \"../components/ProgressBar\";\nimport { LinkButton } from \"../components/LinkButton\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { AppInput } from \"../components/UI/AppInput\";\nimport { Button } from \"../components/Button\";\n\nconst regexUzbNumber = /^(?:\\+998)?(?:\\d{2})?(?:\\d{7})$/;\n\nconst stepOFormSchema = yup.object({\n  username: yup.string().required(\"Обязательное поле!\"),\n  userphone: yup\n    .string()\n    .matches(regexUzbNumber, \"Введите узбекский номер телефона!\")\n    .required(\"Обязательное поле!\"),\n});\n\nconst StepOne = () => {\n  const navigate = useNavigate();\n\n  const [phoneValue, setPhoneValue] = useState(\"\");\n  const [phoneError, setPhoneError] = useState(false);\n\n  \n  const {\n    control,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(stepOFormSchema),\n    defaultValues: {\n      username: \"\",\n      userphone: \"\",\n    },\n  });\n\n  const goToNextPage = () => {\n    if (phoneError) {\n      navigate(\"/step-two\");\n    }\n  };\n\n  const validatePhone = () => {\n    if (phoneValue) {\n      setPhoneError(true);\n    } else {\n      setPhoneError(false);\n    }\n  };\n\n  const handlePhoneInput = (value) => {\n    setPhoneValue(value);\n    validatePhone();\n  };\n\n  const clickHandler = () => {\n    validatePhone();\n\n    goToNextPage();\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"wrapper\">\n        <div className=\"single-input-quiz\">\n          <ProgressBar currentStep={1} />\n          <div className=\"question\">\n            <Heading text=\"1. Занимательный вопрос\" headingType=\"h2\" />\n            <label className=\"input-wrapper\">\n              <Input\n                hasError={phoneError}\n                value={phoneValue}\n                onChange={(value) => handlePhoneInput(value)}\n                isRequired\n                type=\"text\"\n                id=\"answer\"\n                inputPlaceholder=\"Ваш ответ\"\n                errorMessage=\"Введите  в правильном формате\"\n              />\n            </label>\n            <LinkButton\n              id=\"next-btn\"\n              buttonText=\"Далее\"\n              onClick={clickHandler}\n              path=\"/step-two\"\n              type=\"button\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default StepOne;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}